#!/bin/bash
POSIXLY_CORRECT=yes

function help {
   echo "Usage: tradelog [-h|--help] [FILTR] [PŘÍKAZ] [LOG [LOG2 [...]]"
   echo "      PŘÍKAZ může být jeden z:"
   echo "__________________________________________________________________________________________"
   echo "  list-tick – výpis seznamu vyskytujících se burzovních symbolů, tzv. “tickerů”."
   echo "  profit – výpis celkového zisku z uzavřených pozic."
   echo "  pos – výpis hodnot aktuálně držených pozic seřazených sestupně dle hodnoty."
   echo "  last-price – výpis poslední známé ceny pro každý ticker."
   echo "  hist-ord – výpis histogramu počtu transakcí dle tickeru."
   echo "  graph-pos – výpis grafu hodnot držených pozic dle tickeru."
   echo " "
   echo "      FILTR může být kombinace následujících:"
   echo "__________________________________________________________________________________________"
   echo "  -a DATETIME – after: jsou uvažovány pouze záznamy PO tomto datu (bez tohoto data)."
   echo "      DATETIME je formátu YYYY-MM-DD HH:MM:SS."
   echo "  -b DATETIME – before: jsou uvažovány pouze záznamy PŘED tímto datem (bez tohoto data)." 
   echo "  -t TICKER – jsou uvažovány pouze záznamy odpovídající danému tickeru."
   echo "      Při více výskytech přepínače se bere množina všech uvedených tickerů."        
   echo "  -w WIDTH – u výpisu grafů nastavuje jejich šířku, tedy délku nejdelšího řádku na WIDTH."
   echo "      Tedy, WIDTH musí být kladné celé číslo. Více výskytů přepínače je chybné spuštění."
}


NL=$'\n'
kol=0
IFS=$'\n'


m=1; 
while [ $m -le 10 ];
do  
m=$(( $m + 1 ));
arg_t[$m]="d1rect0tr" 
done ;


ctoimost_sell=0;
ctoimost_buy=0;


while [ -n "$1" ]
do
case "$1" in
#################### Filters ######################
-a) 
datatime_after="$2 $3"

datatime_after2='sed -e '1,/$3/d''

shift
shift
;;
-b) 
datatime_before="$2 $3"
datatime_before2='sed -n '1,/$3/p''


shift
shift  
;;

-t)
b=$(( $b + 1 ))
arg_t[$b]=";$2;"

if [ "$vse_t" ]; then
vse_t+=" -e $2"
else
vse_t="$2"
fi
shift 
 ;;
 
 
 
 -w)
width="$2"
wid="true"

shift 
 ;;

###############     PRIKAZ    ############# 
 list-tick)
list_tick="true"
 ;;
 
   profit)
profit="true"

 
 ;;
 
   pos)
pos="true"
 ;;
 
   last-price)
last_price="true"
 ;; 
 
    hist-ord)
hist_ord="true"

 ;; 
 
    graph-pos)
graph_pos="true"

 ;; 

 -h)
$"help"
 ;;
  --help)
$"help"
 ;;
   
*) echo
break ;;

esac
shift
done


if [ "$datatime_after" ]; then nom=1; else  datatime_after=".*" nom=0; fi
if [ "$datatime_before" ]; then echo; else datatime_before="*" ; fi
if [ "${arg_t[1]}" ]; then 
 echo
         else  
             m=1; 
			while [ $m -le 10 ];
			do  
				m=$(( $m + 1 ));
				arg_t[$m]="0" 
			done
fi

for file in "$@"
do
     if [[ $file =~ \.gz$ ]];
then
 files+=`gzcat $file | awk '1; END {print " "}' | sort | sed 's/^ //' | sed 's/# //'`
else
 files+=`cat $file | awk '1; END {print " "}' | sort | sed 's/^ //' | sed 's/# //'`
fi
done 

##############        FILTERS     ##################

IFS=$'\n'
lines_filtered=`echo -e "$files" | sort | uniq | sed -e ''$nom',/'"$datatime_after"'/d' | sed -n '1,/'"$datatime_before"'/p' | sort | grep -e "${arg_t[1]}" -e "${arg_t[2]}" -e "${arg_t[3]}" -e "${arg_t[4]}" -e "${arg_t[5]}" -e "${arg_t[6]}" -e "${arg_t[7]}" -e "${arg_t[8]}" -e "${arg_t[9]}" -e "${arg_t[10]}"`

q=0;
IFS=$'\n'
 for ESD in $lines_filtered;do
 q=$(($q+1))

 
data[$q]=`echo $ESD | awk -F";" '{print $1}'`  
ticker[$q]=`echo $ESD | awk -F";" '{print $2}'` 
buy_sell[$q]=`echo $ESD | awk -F";" '{print $3}'` 
cena[$q]=`echo $ESD | awk -F";" '{print $4}'` 
valuta[$q]=`echo $ESD | awk -F";" '{print $5}'` 
objem[$q]=`echo $ESD | awk -F";" '{print $6}'` 
id[$q]=`echo $ESD | awk -F";" '{print $7}' | awk '{print $1}'` 
ctoimost[$q]=$(echo "${cena[$q]}*${objem[$q]}" | bc -l)


if [ "${buy_sell[$q]}" = "buy" ]; then
ctoimost_buy=$(echo "$ctoimost_buy+${ctoimost[$q]}" | bc -l)
kol=$(echo "$kol+${objem[$q]}" | bc -l)
fi


if [ "${buy_sell[$q]}" = "sell" ]; then
ctoimost_sell=$(echo "$ctoimost_sell+${ctoimost[$q]}" | bc -l)
kol=$(echo "$kol-${objem[$q]}" | bc -l)
fi

raznitsa_sell_buy=$(echo "$ctoimost_sell-$ctoimost_buy" | bc -l)

per=$'\n'
all_tickers+="${ticker[$q]}$per"

raznitsa_buy_sell=$(echo "$ctoimost_buy-$ctoimost_sell" | bc -l)

pos_i=`echo $lines_filtered | awk -F";" '{ if($3 == "sell") {print $2, -$6} else {print $2, $6}}' | awk '{ if ( $1 != "" ) { coord[$1]+=$2 } } END { for ( k in coord ) { print k " " coord[k] } }' | sort`


done
sort_tickers=`echo -e "$all_tickers" | sort | uniq`

 for price_l in $sort_tickers;do

IFS=$'\n'
last_linii=`echo -e "$lines_filtered" | awk '/'$price_l'/{k=$0}END{print k}' | awk -F";" '{print $2,"\t"$4, "xyd"}' | tr 'xyd' '\n'`
last_linii_rr+="$last_linii$per"

done

pos_i=`echo -e "$lines_filtered" | awk -F";" '{ if($3 == "sell") {print $2, -$6} else {print $2, $6}}' | awk '{ if ( $1 != "" ) { coord[$1]+=$2 } } END { for ( k in coord ) { print k "\t" coord[k] } }' | sort`


if [ "$list_tick" = "true" ]; then
  echo -e "$all_tickers" | sed -e '/^$/d' | sort | uniq

fi


if [ "$last_price" = "true" ]; then

 for price_l in $sort_tickers;do

echo -e "$lines_filtered" | awk  '/'$price_l'/{k=$0}END{print k}' | awk -F";" '{print $2,"\t"$4}' 
IFS=$'\n'

done

fi


if [ "$profit" = "true" ]; then
echo -e "$raznitsa_sell_buy"
fi


if [ "$pos" = "true" ]; then
l=0;
t=0;
 for price_final in $last_linii_rr;do
 t=$(($t+1))
ticker[$t]=`echo $price_final | awk '{print $1}'` 
last_pr[$t]=`echo $price_final | awk '{print $2}'` 

while IFS= read line
do
 l=$(($l+1))
ticker2[$l]=`echo $line | awk '{print $1}'` 
last_pr2[$l]=`echo $line | awk '{print $2}'` 
if [ "${ticker[$t]}" == "${ticker2[$l]}" ]; then
echo -e ${ticker[$t]}"\t"$(echo "${last_pr[$t]}*${last_pr2[$l]}" | bc -l)            
fi
done < <(printf '%s\n' "$pos_i")
done
fi

all_tickers_uniq=`echo -e "$all_tickers" | sed -e '/^$/d' | sort | uniq -c`


if [ "$hist_ord" = "true" ]; then

if [ -z "$width" ]; then  
width=1;
   fi

h=0;
while IFS= read lineZ
do
 h=$(($h+1))
coli4ectvo[$h]=`echo $lineZ | awk '{print $1}'`
tik[$h]=`echo $lineZ | awk '{print $2}'`
 
col=${coli4ectvo[$h]}

if [[ "$col" -gt "0" ]]; then   
   cim="#"
  else
   col=`echo $col | sed -e 's/-//g'`
   cim="!"
fi

deli=${col%%.*}
deli=${col%%,*}
ckoko=$(echo "$deli/$width" | bc -l)
ckoko=${ckoko%%.*}
ckoko=${ckoko%%,*}

znak=`printf "%${ckoko}s" ' ' | sed "s/ /$cim/g"`
echo -e ${tik[$h]}"\t":"\t"$znak
done < <(printf '%s\n' "$all_tickers_uniq")

fi

if [ "$graph_pos" = "true" ]; then

if [ -z "$width" ]; then  
width=1000;
   fi

h=0;
while IFS= read lineG
do
 h=$(($h+1))
coli4ectvo[$h]=`echo $lineG | awk '{print $2}'`
tik[$h]=`echo $lineG | awk '{print $1}'`
 
col=${coli4ectvo[$h]}

if [[ "$col" -gt "0" ]]; then   
   cim="#"
  else
   col=`echo $col | sed -e 's/-//g'`
   cim="!"
fi

deli=${col%%.*}
deli=${col%%,*}
ckoko=$(echo "$deli/$width" | bc -l)
ckoko=${ckoko%%.*}
ckoko=${ckoko%%,*}

znak=`printf "%${ckoko}s" ' ' | sed "s/ /$cim/g"`
echo -e ${tik[$h]}"\t":"\t"$znak
done < <(printf '%s\n' "$pos_i")

fi

if [[ -z "$list_tick" ]] && [[ -z "$profit" ]] && [[ -z "$pos" ]] && [[ -z "$last_price" ]] && [[ -z "$hist_ord" ]] && [[ -z "$graph_pos" ]]; then
echo -e "$lines_filtered"
fi

exit 0

im="!"
fi

deli